import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers
 * are:
 *
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 *
 * It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not
 * pentagonal.
 *
 * Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
 * and D = |Pk − Pj| is minimised; what is the value of D?
 */
class Task44 {

  private Map<Integer, Integer> pentagonalMap = new HashMap<>();


  int task4Solution() {
    List<Integer> list = getPentagonalNumberList(2500);
    return getD(list);
  }

  private List<Integer> getPentagonalNumberList(int size) {
    List<Integer> numberList = new ArrayList<>();
    for (int i = 1; i < size; i++) {
      numberList.add(getPentagonalNumber(i));
    }
    return numberList;
  }

  private int getD(List<Integer> numList) {
    for (int i = 0; ; i++) {
      int num1 = numList.get(i);
      for (int j = 0; j < i; j++) {
        int num2 = numList.get(j);
        if (numList.contains(num1 + num2)) {
          if (numList.contains(num1 - num2)) {
            pentagonalMap.put(num1, num2);
            return num1 - num2;
          }
        }
      }
    }
  }

  private int getPentagonalNumber(int number) {
    return number * (3 * number - 1) / 2;
  }
}
